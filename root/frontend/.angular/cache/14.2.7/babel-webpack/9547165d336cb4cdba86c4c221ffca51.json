{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/api.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/auth.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\n\nfunction CreateNewEquipmentComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"h1\", 2);\n    i0.ɵɵtext(2, \"Create New Equipment\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 3, 4);\n    i0.ɵɵlistener(\"ngSubmit\", function CreateNewEquipmentComponent_div_0_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r3);\n\n      const _r1 = i0.ɵɵreference(4);\n\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onSubmit(_r1));\n    });\n    i0.ɵɵelementStart(5, \"div\", 5)(6, \"label\", 6);\n    i0.ɵɵtext(7, \"Equipment Number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 5)(10, \"label\", 8);\n    i0.ɵɵtext(11, \"Equipment Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 5)(14, \"label\", 10);\n    i0.ɵɵtext(15, \"Equipment Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"textarea\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 5)(18, \"label\", 12);\n    i0.ɵɵtext(19, \"Manufacturer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(20, \"input\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"div\", 5)(22, \"label\", 14);\n    i0.ɵɵtext(23, \"Model Nunber\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(24, \"input\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"div\", 16)(26, \"button\", 17);\n    i0.ɵɵtext(27, \"Create\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(28, \"div\", 18);\n    i0.ɵɵelement(29, \"p\", 19);\n    i0.ɵɵelementEnd()();\n  }\n}\n\nexport let CreateNewEquipmentComponent = /*#__PURE__*/(() => {\n  class CreateNewEquipmentComponent {\n    constructor(_api, _router, _auth) {\n      this._api = _api;\n      this._router = _router;\n      this._auth = _auth;\n      this.isLogin = false;\n      this.showMsg = false;\n      this.msg = '';\n    }\n\n    ngOnInit() {\n      this.isUserLogin();\n    }\n\n    isUserLogin() {\n      if (this._auth.getUserDetails() != null) {\n        this.isLogin = true;\n      } else {\n        this._router.navigate(['login']);\n      }\n    }\n\n    onSubmit(form) {\n      console.log('Create new equipment form data: ', form.value);\n\n      let currentEmployeeId = this._auth.getUserId();\n\n      this._api.postTypeRequest('equipment/create', {\n        data: form.value,\n        employee: currentEmployeeId\n      }).subscribe(res => {\n        console.log(res);\n\n        if (res.status) {\n          this.msg = 'Equipment created successfully';\n          this.showMsg = true;\n          form.reset();\n        } else {\n          this.msg = 'Error while creating equipment';\n          this.showMsg = true;\n        }\n      });\n    }\n\n  }\n\n  CreateNewEquipmentComponent.ɵfac = function CreateNewEquipmentComponent_Factory(t) {\n    return new (t || CreateNewEquipmentComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n  };\n\n  CreateNewEquipmentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateNewEquipmentComponent,\n    selectors: [[\"app-create-new-equipment\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"id\", \"createNewEquipmentDiv\", 4, \"ngIf\"], [\"id\", \"createNewEquipmentDiv\"], [1, \"text-center\", \"pt-5\"], [3, \"ngSubmit\"], [\"newEquipmentForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"equipmentNumber\"], [\"type\", \"text\", \"id\", \"equipmentNumber\", \"name\", \"equipmentNumber\", \"ngModel\", \"\", 1, \"form-control\", \"mb-3\"], [\"for\", \"equipmentName\"], [\"type\", \"text\", \"id\", \"equipmentName\", \"name\", \"equipmentName\", \"ngModel\", \"\", 1, \"form-control\", \"mb-3\"], [\"for\", \"equipmentDescription\"], [\"id\", \"equipmentDescription\", \"rows\", \"3\", \"name\", \"equipmentDescription\", \"ngModel\", \"\", 1, \"form-control\", \"mb-3\"], [\"for\", \"manufacturer\"], [\"type\", \"text\", \"id\", \"manufacturer\", \"name\", \"manufacturer\", \"ngModel\", \"\", 1, \"form-control\", \"mb-3\"], [\"for\", \"modelNumber\"], [\"type\", \"text\", \"id\", \"modelNumber\", \"name\", \"modelNumber\", \"ngModel\", \"\", 1, \"form-control\", \"mb-3\"], [1, \"text-center\"], [\"type\", \"submit\", \"id\", \"createEquipment\", 1, \"btn\", \"btn-primary\"], [\"id\", \"feedbackForUser\"], [\"id\", \"msg\"]],\n    template: function CreateNewEquipmentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CreateNewEquipmentComponent_div_0_Template, 30, 0, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLogin);\n      }\n    },\n    dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.NgModel, i5.NgForm],\n    styles: [\"#createNewEquipmentDiv[_ngcontent-%COMP%]{color:#fff}#createNewEquipmentDiv[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin:5% 30%}#createNewEquipmentDiv[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{margin-bottom:10px}\"]\n  });\n  return CreateNewEquipmentComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}