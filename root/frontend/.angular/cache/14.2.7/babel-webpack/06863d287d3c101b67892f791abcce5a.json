{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/api.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/auth.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\n\nfunction CreateNewTaskComponent_option_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const employee_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", employee_r3.employeeId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", employee_r3.firstname, \" \", employee_r3.lastname, \"\");\n  }\n}\n\nfunction CreateNewTaskComponent_option_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const equipment_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(equipment_r4.equipmentName);\n  }\n}\n\nexport let CreateNewTaskComponent = /*#__PURE__*/(() => {\n  class CreateNewTaskComponent {\n    constructor(_api, _router, _auth) {\n      this._api = _api;\n      this._router = _router;\n      this._auth = _auth;\n      this.isLogin = false;\n      this.showMsg = false;\n      this.msg = '';\n      this.employees = [];\n      this.equipments = [];\n      this.equipmentNum = '';\n    }\n\n    ngOnInit() {\n      this.isUserLogin();\n    }\n\n    isUserLogin() {\n      if (this._auth.getUserDetails() != null) {\n        this.isLogin = true;\n        this.getEmployees();\n        this.getEquipments();\n      } else {\n        this._router.navigate(['login']);\n      }\n    }\n\n    getEmployees() {\n      this._api.getTypeRequest('user/get-all-employees').subscribe(res => {\n        console.log(res);\n\n        if (res.status) {\n          this.employees = res.data;\n        } else {\n          this.employees = [];\n        }\n      });\n    }\n\n    getEquipments() {\n      this._api.getTypeRequest('equipment/get-all-equipment').subscribe(res => {\n        console.log(res);\n\n        if (res.status) {\n          this.equipments = res.data;\n        } else {\n          this.equipments = [];\n        }\n      });\n    }\n\n    showEquipmentNumber(event) {\n      console.log(event.value);\n      this.equipments.forEach(equipment => {\n        if (equipment.equipmentName == event.value) {\n          this.equipmentNum = equipment.equipmentNumber;\n        }\n      });\n    }\n\n    employeeChange(event) {\n      console.log(event.value);\n    }\n\n    onSubmit(form) {\n      console.log('Create new task form data: ', form.value);\n\n      let currentEmployeeId = this._auth.getUserId();\n\n      this._api.postTypeRequest('tasks/create', {\n        data: form.value,\n        currentEmployee: currentEmployeeId\n      }).subscribe(res => {\n        console.log(res);\n\n        if (res.status) {\n          this.msg = 'Task created successfully';\n          this.showMsg = true;\n          form.reset();\n        } else {\n          this.msg = 'Error while creating task';\n          this.showMsg = true;\n        }\n      });\n    }\n\n  }\n\n  CreateNewTaskComponent.ɵfac = function CreateNewTaskComponent_Factory(t) {\n    return new (t || CreateNewTaskComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n  };\n\n  CreateNewTaskComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateNewTaskComponent,\n    selectors: [[\"app-create-new-task\"]],\n    decls: 42,\n    vars: 3,\n    consts: [[\"id\", \"createNewTaskDiv\"], [1, \"text-center\", \"pt-5\"], [3, \"ngSubmit\"], [\"newTaskForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"description\"], [\"id\", \"description\", \"rows\", \"3\", \"name\", \"description\", \"ngModel\", \"\", 1, \"form-control\", \"mb-3\"], [\"for\", \"assignedTo\"], [\"id\", \"assignedTo\", \"name\", \"assignedTo\", \"ngModel\", \"\", 1, \"form-control\", \"mb-3\", 3, \"change\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"repeatAfter\"], [\"type\", \"number\", \"id\", \"repeatAfter\", \"name\", \"repeatAfter\", \"ngModel\", \"\", 1, \"form-control\", \"mb-3\"], [\"for\", \"equipmentName\"], [\"id\", \"equipmentName\", \"name\", \"equipmentName\", \"ngModel\", \"\", 1, \"form-control\", \"mb-3\", 3, \"change\"], [4, \"ngFor\", \"ngForOf\"], [\"for\", \"equipmentNumber\"], [\"type\", \"text\", \"id\", \"equipmentNumber\", \"name\", \"equipmentNumber\", 1, \"form-control\", \"mb-3\", 3, \"ngModel\"], [\"for\", \"sechduleFor\"], [\"type\", \"date\", \"id\", \"sechduleFor\", \"name\", \"scheduleFor\", \"ngModel\", \"\", 1, \"form-control\", \"mb-3\"], [\"for\", \"estCompletionTime\"], [\"type\", \"number\", \"id\", \"estCompletionTime\", \"name\", \"estCompletionTime\", \"ngModel\", \"\", 1, \"form-control\", \"mb-3\"], [1, \"text-center\", \"py-3\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [3, \"value\"]],\n    template: function CreateNewTaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n        i0.ɵɵtext(2, \"Create new Task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 2, 3);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateNewTaskComponent_Template_form_ngSubmit_3_listener() {\n          i0.ɵɵrestoreView(_r5);\n\n          const _r0 = i0.ɵɵreference(4);\n\n          return i0.ɵɵresetView(ctx.onSubmit(_r0));\n        });\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Task Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"textarea\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 4)(10, \"label\", 7);\n        i0.ɵɵtext(11, \"Assigned To\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"select\", 8);\n        i0.ɵɵlistener(\"change\", function CreateNewTaskComponent_Template_select_change_12_listener($event) {\n          return ctx.employeeChange($event.target);\n        });\n        i0.ɵɵelementStart(13, \"option\", 9);\n        i0.ɵɵtext(14, \"Select an employee\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, CreateNewTaskComponent_option_15_Template, 2, 3, \"option\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 4)(17, \"label\", 11);\n        i0.ɵɵtext(18, \"Repeat After (days)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 4)(21, \"label\", 13);\n        i0.ɵɵtext(22, \"Equipment Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"select\", 14);\n        i0.ɵɵlistener(\"change\", function CreateNewTaskComponent_Template_select_change_23_listener($event) {\n          return ctx.showEquipmentNumber($event.target);\n        });\n        i0.ɵɵelementStart(24, \"option\", 9);\n        i0.ɵɵtext(25, \"Select an equipment\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(26, CreateNewTaskComponent_option_26_Template, 2, 1, \"option\", 15);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"div\", 4)(28, \"label\", 16);\n        i0.ɵɵtext(29, \"Equipment Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"input\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 4)(32, \"label\", 18);\n        i0.ɵɵtext(33, \"Schedule For\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(34, \"input\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 4)(36, \"label\", 20);\n        i0.ɵɵtext(37, \"Estimated Completion Time (minutes)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(38, \"input\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"div\", 22)(40, \"button\", 23);\n        i0.ɵɵtext(41, \"Create\");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngForOf\", ctx.employees);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngForOf\", ctx.equipments);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.equipmentNum);\n      }\n    },\n    dependencies: [i4.NgForOf, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.NgModel, i5.NgForm],\n    styles: [\"#createNewTaskDiv[_ngcontent-%COMP%]{color:#fff}#createNewTaskDiv[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin:5% 30%}#createNewTaskDiv[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{margin-bottom:10px}\"]\n  });\n  return CreateNewTaskComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}