{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/api.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/auth.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\n\nfunction AllEmployeeSchedulesComponent_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const employee_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", employee_r3.employeeId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", employee_r3.firstname, \" \", employee_r3.lastname, \"\");\n  }\n}\n\nexport let AllEmployeeSchedulesComponent = /*#__PURE__*/(() => {\n  class AllEmployeeSchedulesComponent {\n    constructor(_api, _router, _auth) {\n      this._api = _api;\n      this._router = _router;\n      this._auth = _auth;\n      this.isLogin = false;\n      this.isAdmin = false;\n      this.date = '';\n      this.employeeId = '';\n      this.employees = [];\n    }\n\n    ngOnInit() {\n      this.isUserLogin();\n      this.isAdminUser();\n    }\n\n    isUserLogin() {\n      if (this._auth.getUserDetails() != null) {\n        this.isLogin = true;\n        this.getEmployees();\n        this.populateWithAllTasks();\n      } else {\n        this._router.navigate(['login']);\n      }\n    }\n\n    isAdminUser() {\n      if (this._auth.getAdminStatus() == '1') {\n        this.isAdmin = true;\n      }\n    }\n\n    getEmployees() {\n      this._api.getTypeRequest('user/get-all-employees').subscribe(res => {\n        console.log(res);\n\n        if (res.status) {\n          this.employees = res.data;\n        } else {\n          this.employees = [];\n        }\n      });\n    }\n\n    populateWithAllTasks() {\n      this._api.getTypeRequest('tasks/get-all-tasks').subscribe(res => {\n        console.log(res);\n\n        if (res.status) {\n          $('#schedules').empty();\n\n          for (let i = 0; i < res.data.length; i++) {\n            let taskDescription = res.data[i].description;\n            let equipmentName = res.data[i].equipmentName;\n            let equipmentNumber = res.data[i].equipmentNumber;\n            let estCompletionTime = res.data[i].estCompletionTime;\n            let html = `\n            <div class=\"card mx-5 my-3\">\n              <div class=\"card-body\">\n                <h5 class=\"card-text\">Equipment: ${equipmentNumber} - ${equipmentName}</h5>\n                <p class=\"card-text\">Description: ${taskDescription}</p>\n                <p class=\"card-text\">Estimated Completion Time: ${estCompletionTime} mins</p>\n              </div>\n            </div>`;\n            $('#schedules').append(html);\n            $('.card').css('background-color', '#3b5249');\n            $('.card').css('color', 'white');\n          }\n        }\n      });\n    }\n\n    getSchedule(date, employeeId) {\n      this.date = date.value.toString();\n      this.employeeId = employeeId.value.toString();\n      console.log(\"hi\");\n      console.log(\"Date: \" + this.date + \" Employee ID: \" + this.employeeId);\n\n      if (this.date == '' && this.employeeId == '') {\n        this.populateWithAllTasks();\n      }\n\n      if (this.date.length > 0 && this.employeeId == '') {\n        this._api.postTypeRequest('tasks/get-employees-schedules-by-date', {\n          date: this.date\n        }).subscribe(res => {\n          console.log(res);\n\n          if (res.status) {\n            $('#schedules').empty();\n\n            for (let i = 0; i < res.data.length; i++) {\n              let taskDescription = res.data[i].description;\n              let equipmentName = res.data[i].equipmentName;\n              let equipmentNumber = res.data[i].equipmentNumber;\n              let estCompletionTime = res.data[i].estCompletionTime;\n              let html = `\n              <div class=\"card mx-5 my-3\">\n                <div class=\"card-body\">\n                  <h5 class=\"card-text\">Equipment: ${equipmentNumber} - ${equipmentName}</h5>\n                  <p class=\"card-text\">Description: ${taskDescription}</p>\n                  <p class=\"card-text\">Estimated Completion Time: ${estCompletionTime} mins</p>\n                </div>\n              </div>`;\n              $('#schedules').append(html);\n              $('.card').css('background-color', '#3b5249');\n              $('.card').css('color', 'white');\n            }\n          }\n        });\n      }\n\n      if (this.date == '' && this.employeeId.length > 0) {\n        this._api.postTypeRequest('tasks/get-employees-schedules-by-employee', {\n          employee: this.employeeId\n        }).subscribe(res => {\n          console.log(res);\n\n          if (res.status) {\n            $('#schedules').empty();\n\n            for (let i = 0; i < res.data.length; i++) {\n              let taskDescription = res.data[i].description;\n              let equipmentName = res.data[i].equipmentName;\n              let equipmentNumber = res.data[i].equipmentNumber;\n              let estCompletionTime = res.data[i].estCompletionTime;\n              let html = `\n              <div class=\"card mx-5 my-3\">\n                <div class=\"card-body\">\n                  <h5 class=\"card-text\">Equipment: ${equipmentNumber} - ${equipmentName}</h5>\n                  <p class=\"card-text\">Description: ${taskDescription}</p>\n                  <p class=\"card-text\">Estimated Completion Time: ${estCompletionTime} mins</p>\n                </div>\n              </div>`;\n              $('#schedules').append(html);\n              $('.card').css('background-color', '#3b5249');\n              $('.card').css('color', 'white');\n            }\n          }\n        });\n      }\n    }\n\n  }\n\n  AllEmployeeSchedulesComponent.ɵfac = function AllEmployeeSchedulesComponent_Factory(t) {\n    return new (t || AllEmployeeSchedulesComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n  };\n\n  AllEmployeeSchedulesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AllEmployeeSchedulesComponent,\n    selectors: [[\"app-all-employee-schedules\"]],\n    decls: 16,\n    vars: 1,\n    consts: [[\"id\", \"allEmployeeSchedulesDiv\"], [1, \"text-center\", \"py-5\"], [\"id\", \"inputs\"], [\"for\", \"employeeName\", 1, \"mb-3\"], [\"id\", \"employeeName\", \"name\", \"employeeName\", 1, \"form-control\", \"mb-3\", 3, \"change\"], [\"employeeChoosen\", \"\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"date\", 1, \"mb-3\"], [\"type\", \"date\", \"id\", \"date\", \"name\", \"date\", 1, \"form-control\", \"mb-3\", 3, \"change\"], [\"dateChoosen\", \"\"], [\"id\", \"schedules\"], [3, \"value\"]],\n    template: function AllEmployeeSchedulesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r4 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n        i0.ɵɵtext(2, \"Schedules\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"label\", 3);\n        i0.ɵɵtext(5, \"Employee Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"select\", 4, 5);\n        i0.ɵɵlistener(\"change\", function AllEmployeeSchedulesComponent_Template_select_change_6_listener() {\n          i0.ɵɵrestoreView(_r4);\n\n          const _r2 = i0.ɵɵreference(14);\n\n          const _r0 = i0.ɵɵreference(7);\n\n          return i0.ɵɵresetView(ctx.getSchedule(_r2, _r0));\n        });\n        i0.ɵɵelementStart(8, \"option\", 6);\n        i0.ɵɵtext(9, \"Select an Employee\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, AllEmployeeSchedulesComponent_option_10_Template, 2, 3, \"option\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"label\", 8);\n        i0.ɵɵtext(12, \"Date:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 9, 10);\n        i0.ɵɵlistener(\"change\", function AllEmployeeSchedulesComponent_Template_input_change_13_listener() {\n          i0.ɵɵrestoreView(_r4);\n\n          const _r2 = i0.ɵɵreference(14);\n\n          const _r0 = i0.ɵɵreference(7);\n\n          return i0.ɵɵresetView(ctx.getSchedule(_r2, _r0));\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(15, \"div\", 11);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.employees);\n      }\n    },\n    dependencies: [i4.NgForOf, i5.NgSelectOption, i5.ɵNgSelectMultipleOption],\n    styles: [\"#allEmployeeSchedulesDiv[_ngcontent-%COMP%]{color:#fff}#allEmployeeSchedulesDiv[_ngcontent-%COMP%]   #inputs[_ngcontent-%COMP%]{margin-left:25%;margin-right:25%}\"]\n  });\n  return AllEmployeeSchedulesComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}